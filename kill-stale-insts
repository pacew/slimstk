#! /usr/bin/php
<?php /* -*- mode:php -*- */

require_once ("/opt/slimstk/slimstkcmd.php");
slimstk_cmd_init ();

$region = $stkinfo['region'];
slimstk_set_region ($region);

$elb_name = sprintf ("%selb", $stkname);
$asg_name = sprintf ("%sasg", $stkname);

function get_autoscaling_group () {
	global $asg_name;

	$args = array ("autoscaling", "describe-auto-scaling-groups");
	$val = slimstk_aws ($args);
	foreach ($val['AutoScalingGroups'] as $group) {
		if ($group['AutoScalingGroupName'] == $asg_name) {
			return ($group);
		}
	}
	return (NULL);
}

$lconfigs = array ();
$lconfigs_max_seq = 0;
function get_launch_configurations () {
	global $lconfigs, $stkname, $lconfigs_max_seq;

	$max_seq = 0;

	$args = array ("autoscaling", "describe-launch-configurations");
	$val = slimstk_aws ($args);
	foreach ($val['LaunchConfigurations'] as $lc) {
		/* only pay attention to names like STKNAME_launch_### */
		$name = $lc['LaunchConfigurationName'];
		$arr = explode ('_', $name);
		if (strcmp (@$arr[0], $stkname) != 0)
			continue;
		if (strcmp (@$arr[1], "launch") != 0)
			continue;
		$seq = intval (@$arr[2]);
		if ($seq > $max_seq)
			$max_seq = $seq;

		$lconfigs[$name] = $lc;
	}

	$lconfigs_max_seq = $max_seq;
}

/* ================================================================ */

get_launch_configurations ();

$make_new_lconfig = 1;
if (($asg = get_autoscaling_group ()) == NULL) {
	printf ("can't find asg\n");
	exit (1);
}

$cur_lcname = $asg['LaunchConfigurationName'];
if (($lconfig = @$lconfigs[$cur_lcname]) == NULL) {
	printf ("can't find current launch config\n");
	exit (1);
}

$cur_lconfig = $lconfig;
$cur_lctime = strtotime ($cur_lconfig['CreatedTime']);

$insts = array ();
$args = array ("ec2", "describe-instances");
$val = slimstk_aws ($args);
foreach ($val['Reservations'] as $resv) {
	foreach ($resv['Instances'] as $inst) {
		$inst_id = $inst['InstanceId'];
		$insts[$inst_id] = $inst;
	}
}

$stale_insts = array ();
$good_insts = array ();
$strange_insts = array ();
foreach ($asg['Instances'] as $asg_inst) {
	$inst_id = $asg_inst['InstanceId'];
	if (($inst = @$insts[$inst_id]) == NULL) {
		printf ("inst %s is in the asg but not in ec2 insts\n",
			$inst_id);
		exit (1);
	}

	$inst_time = strtotime ($inst['LaunchTime']);

	if ($inst_time > $cur_lctime) {
		if (strcasecmp($asg_inst['LifecycleState'], "InService") == 0
		    && strcasecmp($asg_inst['HealthStatus'], "Healthy") == 0){
			/* TODO make sure inst is all the way up */
			$good_insts[] = $asg_inst;
		} else {
			$strange_insts[] = $asg_inst;
		}
	} else {
		$stale_insts[] = $asg_inst;
	}
}

if (count ($good_insts) == 0) {
	printf ("no good insts, so not killing stale insts\n");
	exit (1);
}

printf ("stale insts:\n");
var_dump ($stale_insts);
