#! /usr/bin/php
<?php /* -*- mode:php -*- */

require_once ("/opt/slimstk/slimstkcmd.php");
slimstk_cmd_init ();

$config_file = sprintf ("%s/.ssh/config", $_SERVER['HOME']);
$f = fopen ($config_file, "r");
$accumulator = "";
$hostname = NULL;
$hosts = array ();
while (($line = fgets ($f)) != NULL) {
	$line = rtrim ($line, "\n");
	if (preg_match ("/^Host\\s(.*)/", $line, $parts)) {
		$next_hostname = trim ($parts[1]);
		$hosts[] = array ($hostname, $accumulator);
		$hostname = $next_hostname;
		$accumulator = "";
	}
	$accumulator .= $line."\n";
}
$hosts[] = array ($hostname, $accumulator);

function update_host ($shortname, $destname) {
	global $hosts, $alternative_ssh_port;

	$text = "";
	$text .= sprintf ("Host %s\n", $shortname);
	$text .= sprintf ("Hostname %s\n", $destname);
	$text .= "User ec2-user\n";
	$text .= sprintf ("Port %d\n", $alternative_ssh_port);
	$text .= "StrictHostKeyChecking no\n";
	$text .= "UserKnownHostsFile=/dev/null\n";

	$found = 0;
	$n = count ($hosts);
	for ($i = 0; $i < $n; $i++) {
		if (strcmp ($hosts[$i][0], $shortname) == 0) {
			$found = 1;
			$hosts[$i][1] = $text;
			break;
		}
	}
	if (! $found)
		$hosts[] = array ($shortname, $text);
}

function write_config () {
	global $hosts;

	$fname = sprintf ("%s/.ssh/config", $_SERVER['HOME']);
	$ts = strftime ("%Y%m%dT%H%M%S", filemtime ($fname));
	$bakname = sprintf ("%s.%s", $fname, $ts);
	rename ($fname, $bakname);

	$f = fopen ($fname, "w");
	foreach ($hosts as $arr) {
		$hostname = $arr[0];
		$text = $arr[1];
		fwrite ($f, rtrim ($text, "\n"));
		fprintf ($f, "\n\n");
	}
	fclose ($f);
}


function do_stack ($stkname, $stkinfo) {
	global $alternative_ssh_port;

	if (($server_domain = @$stkinfo['server_domain']) != NULL) {
		foreach (array ("a","b","c","d","e") as $zone) {
			$short_hostname = sprintf ("%s%s", $stkname, $zone);
			$long_hostname = sprintf ("%s.%s",
						  $short_hostname,
						  $server_domain);
			update_host ($short_hostname, $long_hostname);
			update_host ($long_hostname, $long_hostname);
		}
	}

	foreach ($stkinfo['sites'] as $siteid => $sinfo) {
		if (($url_name = @$sinfo['url_name']) == NULL)
			continue;
		update_host ($siteid, $url_name);
		update_host ($url_name, $url_name);
	}
		
}
	
foreach ($slimstk['stacks'] as $stkname => $stkinfo) {
	do_stack ($stkname, $stkinfo);
}


write_config ();

$val = 0;
if (preg_match ('/ServerAliveInterval (.*)/', $hosts[0][1], $parts))
	$val = $parts[1];

if ($val == 0 || $val > 50) {
	printf ("you need to set ServerAliveInterval 50"
		." at the start of your ssh config\n");
}
